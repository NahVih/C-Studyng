#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <ctype.h>

int main(int argc, string argv[])
{

    int n = 0;
    int m = 1;
    int l = 0;

    if (argc == 2 && argv[1][26] == '\0'){
        while (l <=25)
        {
            while (m <=25)
            {
                if (argv[1][m] != argv[1][l])
                {
                m++;
                }
                else if (argv[1][l] == argv[1][l+1] || argv[1][l] == argv[1][l-1])
                {
                    return 1;
                }
                else if (argv[1][l] == argv[1][m])
                {
                    return 1;
                };
            };
        l++;
        m=l+1;
        };
    }
    else
    {
        return 1;
    };

    if (argc == 2 && argv[1][26] == '\0')
        {
            while (n <= 25)
            {
                if ((int)argv[1][n] >= 65 && (int)argv[1][n] <= 122) // this if is to validate the command-line
                {
                    n++;
                }
                else {
                    return 1;
                }
            }



        string text = get_string("plaintext: ");
        int w = 0;

        printf("ciphertext: ");
        while ((char)text[w] != '\0')
        {
            if ((char)text[w] >= 'A' && (char)text[w] <= 'Z') // this if is to preserve the letters
            {
                int x = (int)text[w]-65;
                argv[1][x] = tolower(argv[1][x]);
                printf("%c", toupper((char)argv[1][x]));
                w++;
            }
            else if ((char)text[w] >= 'a' && (char)text[w] <= 'z') // this if is to preserve the letters
            {
                int x = (int)text[w]-97;
                argv[1][x] = tolower(argv[1][x]);
                printf("%c", (char)argv[1][x]);
                w++;
            }
            else // this else is to non-alphabetical characters be outputted unchanged
            {
                printf("%c", (char)text[w]);
                w++;
            }
        }
        printf("\n");
        }


        else
        {
            return 1;
        };
}
