#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main(int argc, string argv[])
{

    int n = 0;

    if (argc == 2)
    {
        while ((int)argv[1][n] != '\0')
        {
            if ((int)argv[1][n] >= 48 && (int)argv[1][n] <= 57) // this if is to validate the command-line
            {
                n++;
            }
            else
            {
                return 1;
            }
        }
    }
    else
    {
        return 1;
    }

    string text = get_string("plaintext: ");

    int w = 0;
    int x = atoi(argv[1]); // this if is to convert the command-line into a int

    printf("ciphertext: ");
    while ((char)text[w] != '\0')
    {
        if ((char)text[w] >= 'A' && (char)text[w] <= 'Z') // this if is to preserve the letters
        {
            if ((int)text[w] + x > 90)
            {
                while ((int)text[w] + x > 90) // this while is to preserve letters rotated
                {
                    text[w] = (int)text[w] - 26;
                }
                printf("%c", (char)text[w] + x);
            }
            else
            {
                printf("%c", (char)text[w] + x);
            }
            w++;
        }
        else if ((char)text[w] >= 'a' && (char)text[w] <= 'z') // this if is to preserve the letters
        {
            if ((int)text[w] + x > 122)
            {
                while ((int)text[w] + x > 122) // this while is to preserve letters rotated
                {
                    text[w] = (int)text[w] - 26;
                }
                printf("%c", (char)text[w] + x);
            }
            else
            {
                printf("%c", (char)text[w] + x);
            }
            w++;
        }
        else // this else is to non-alphabetical characters be outputted unchanged
        {
            printf("%c", (char)text[w]);
            w++;
        }
    }
    printf("\n");
}
